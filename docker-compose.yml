name: mcp-notion-stack

networks:
  mcp:
    name: mcp-notion-stack_mcp
    driver: bridge

services:
  # Production MCP Server (stable, tested)
  notion_mcp:
    image: mcp/notion:latest
    container_name: notion_mcp
    environment:
      NOTION_TOKEN: ${NOTION_TOKEN}
      NOTION_VERSION: ${NOTION_VERSION:-2022-06-28}
      AUTH_TOKEN: ${MCP_AUTH}
    command: ["notion-mcp-server", "--transport", "http", "--port", "3030", "--auth-token", "${MCP_AUTH}"]
    healthcheck:
      test: ["CMD", "curl", "-sf", "http://localhost:3030/health"]
      interval: 10s
      timeout: 3s
      retries: 20
    networks: [mcp]
    restart: unless-stopped

  # Development MCP Server (clean, minimal)
  notion_mcp_dev:
    build:
      context: ./services/notion-mcp-dev
    container_name: notion_mcp_dev
    environment:
      NOTION_TOKEN: ${NOTION_TOKEN}
      NOTION_VERSION: ${NOTION_VERSION:-2022-06-28}
      AUTH_TOKEN: ${MCP_AUTH}
    healthcheck:
      test: ["CMD", "curl", "-sf", "http://localhost:3031/health"]
      interval: 10s
      timeout: 3s
      retries: 20
    networks: [mcp]
    restart: unless-stopped
    profiles: ["dev"] # Only start when explicitly requested

  # Router Service
  notion_router:
    build:
      context: ./services/router
      dockerfile: Dockerfile
    container_name: notion_router
    env_file:
      - headers.env.router
    depends_on:
      notion_mcp:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-sf", "http://localhost:3032/health"]
      interval: 10s
      timeout: 3s
      retries: 20
    networks: [mcp]
    restart: unless-stopped

  # Cloudflare Tunnel
  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: cloudflared
    env_file:
      - .env
    command: ["tunnel", "--no-autoupdate", "run", "--token", "${CLOUDFLARE_TUNNEL_TOKEN}"]
    depends_on:
      notion_mcp:
        condition: service_started
      notion_router:
        condition: service_started
    networks: [mcp]
    restart: unless-stopped
